- # locals:
- #   - officer_group
- #   - structureable

%li.officer_entry

  %span.button-wrapper
    - if can?(:destroy, officer_group) and can?(:create_officers_group_for, structureable) and officer_group.descendant_users.count == 0
      %a.btn.btn-danger.remove_button#destroy_office.show_only_in_edit_mode{href: group_path(officer_group, format: 'json')}
        = icon :trash
    
  %span.label-wrapper
    - if can? :rename, officer_group
      - if current_user.developer?
        .icon-small.copy-to-clipboard{title: "Group.find(#{officer_group.id})"}
          = icon :wrench
      = best_in_place officer_group, :name
    - else
      = officer_group.name
  
    - if can? :rename, officer_group
      %span.group_flags.show_only_in_edit_mode
        - for flag in officer_group.flags
          %span.label.label-info
            = icon :tag
            =t flag

  %span.value-wrapper
    %ul.officers
      - if officer_group.child_groups.count == 0
        %li.direct_officers
          - if can? :update_memberships, officer_group
            = multiple_users_best_in_place officer_group, :direct_members_titles_string
          - else
            = user_links officer_group.direct_members
      - elsif officer_group.direct_members.count > 0
        %li.direct_officers
          = user_links officer_group.direct_members
  
      - # Some officer group have other groups linked as children
      - # in order to give other groups certain rights on a regular
      - # basis. List those groups:
      - #
      - officer_group.child_groups.each do |subgroup|
        %li= link_to subgroup.name, subgroup